% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{nicheplot}
\alias{nicheplot}
\alias{nicheplot,ANY-method}
\title{Niche plot for distribution objects}
\usage{
nicheplot(
  mod,
  xvar = NULL,
  yvar = NULL,
  envvars = NULL,
  overlay_data = FALSE,
  plot = TRUE,
  fname = NULL,
  title = NULL,
  pal = NULL,
  ...
)

\S4method{nicheplot}{ANY}(
  mod,
  xvar = NULL,
  yvar = NULL,
  envvars = NULL,
  overlay_data = FALSE,
  plot = TRUE,
  fname = NULL,
  title = NULL,
  pal = NULL,
  ...
)
}
\arguments{
\item{mod}{A trained \code{\link{DistributionModel}} or alternatively a \code{\link{SpatRaster}}
object with \code{prediction} model within.}

\item{xvar}{A \code{\link{character}} denoting the predictor on the x-axis. Alternatively a \code{\link{SpatRaster}}
object can be provided.}

\item{yvar}{A \code{\link{character}} denoting the predictor on the y-axis. Alternatively a \code{\link{SpatRaster}}
object can be provided.}

\item{envvars}{A \code{\link{SpatRaster}} object containing all environmental variables. Only
used if \code{xvar} and \code{yvar} is empty (Default: \code{NULL}).}

\item{overlay_data}{A \code{\link{logical}} on whether training data should be overlaid
on the plot. Only used for \code{\link{DistributionModel}} objects (Default: \code{FALSE}).}

\item{plot}{A \code{\link{logical}} indication of whether the result is to be plotted
(Default: \code{TRUE})?}

\item{fname}{A \code{\link{character}} specifying the output file name a created figure
should be written to.}

\item{title}{Allows to respecify the title through a \code{\link{character}} (Default: \code{NULL}).}

\item{pal}{An optional \code{\link{vector}} with continuous custom colours (Default: \code{NULL}).}

\item{...}{Other engine specific parameters.}
}
\value{
Saved niche plot in \code{'fname'} if specified, otherwise plot.
}
\description{
The suitability of any given area for a biodiversity feature can in
many instances be complex and non-linear. Visualizing obtained suitability
predictions (e.g. from \code{\link[=train]{train()}}) against underlying predictors might help
to explain the underlying gradients of the niche.

Supported Inputs for this function are either single trained \code{ibis.iSDM}
\code{\link{DistributionModel}} objects or alternatively a set of three \code{\link{SpatRaster}} objects.
In both cases, users can specify \code{"xvar"} and \code{"yvar"} explicitly
or leave them empty. In the latter case a principal component analysis (PCA)
is conducted on the full environmental stack (loaded from \code{\link{DistributionModel}}
or supplied separately).
}
\examples{
# Make quick prediction
background <- terra::rast(system.file('extdata/europegrid_50km.tif',
package='ibis.iSDM',mustWork = TRUE))
virtual_points <- sf::st_read(system.file('extdata/input_data.gpkg', package='ibis.iSDM'), 'points',quiet = TRUE)
ll <- list.files(system.file('extdata/predictors/',package = 'ibis.iSDM',mustWork = TRUE),full.names = TRUE)

# Load them as rasters
predictors <- terra::rast(ll);names(predictors) <- tools::file_path_sans_ext(basename(ll))

# Add GLM as an engine and predict
fit <- distribution(background) |>
add_biodiversity_poipo(virtual_points, field_occurrence = 'Observed',
name = 'Virtual points',docheck = FALSE) |>
add_predictors(predictors, transform = 'none',derivates = 'none') |>
engine_glm() |>
train()

# Plot niche for prediction for temperature and forest cover
nicheplot(fit, xvar = "bio01_mean_50km", yvar = "CLC3_312_mean_50km" )
}
\seealso{
\link{partial}, \link{plot.DistributionModel}
}
\keyword{misc}
