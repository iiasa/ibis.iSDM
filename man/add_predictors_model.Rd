% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_predictors_model.R
\name{add_predictors_model}
\alias{add_predictors_model}
\title{Add predictors from a fitted model to a Biodiversity distribution object}
\usage{
add_predictors_model(
  x,
  model,
  transform = "scale",
  derivates = "none",
  threshold_only = FALSE,
  priors = NULL,
  ...
)

\S4method{add_predictors_model}{BiodiversityDistribution}(
  x,
  model,
  transform = "scale",
  derivates = "none",
  threshold_only = FALSE,
  priors = NULL,
  ...
)
}
\arguments{
\item{x}{\code{\link[=distribution]{distribution()}} (i.e. \code{\linkS4class{BiodiversityDistribution}}) object.}

\item{model}{A \code{\link{DistributionModel}} object.}

\item{transform}{A \code{\link{vector}} stating whether predictors should be
preprocessed in any way (Options: \code{'none'},\code{'pca'},
\code{'scale'}, \code{'norm'})}

\item{derivates}{A Boolean check whether derivate features should be
considered (Options: \code{'none'}, \code{'thresh'}, \code{'hinge'},
\code{'quad'}) )}

\item{threshold_only}{A \code{\link{logical}} flag indicating whether to add thresholded
layers from the fitted model (if existing) instead (Default: \code{FALSE}).}

\item{priors}{A \code{\linkS4class{PriorList}} object. Default is set to \code{NULL}
which uses default prior assumptions.}

\item{...}{Other parameters passed down}
}
\description{
This function is a convenience wrapper to add the output from a
previous fitted \code{\link{DistributionModel}} to another \code{\linkS4class{BiodiversityDistribution}}
object. Obviously only works if a prediction was fitted in the model. Options
to instead add thresholds, or to transform / derivate the model outputs are
also supported.
}
\details{
A transformation takes the provided rasters and for instance rescales them or
transforms them through a principal component analysis (\link{prcomp}). In
contrast, derivates leave the original provided predictors alone, but instead
create new ones, for instance by transforming their values through a
quadratic or hinge transformation. Note that this effectively increases the
number of predictors in the object, generally requiring stronger
regularization by the used \code{\link{Engine}}. Both transformations and derivates can
also be combined. Available options for transformation are:
\itemize{
\item \code{'none'} - Leaves the provided predictors in the original scale.
\item \code{'pca'} - Converts the predictors to principal components. Note that this
results in a renaming of the variables to principal component axes!
\item \code{'scale'} - Transforms all predictors by applying \link{scale} on them.
\item \code{'norm'} - Normalizes all predictors by transforming them to a scale from 0 to 1.
\item \code{'windsor'} - Applies a windsorization to the target predictors. By default
this effectively cuts the predictors to the 0.05 and 0.95, thus helping to
remove extreme outliers.
}

Available options for creating derivates are:
\itemize{
\item \code{'none'} - No additional predictor derivates are created.
\item \code{'quad'} - Adds quadratic transformed predictors.
\item \code{'interaction'} - Add interacting predictors. Interactions need to be specified (\code{"int_variables"})!
\item \code{'thresh'} - Add threshold transformed predictors.
\item \code{'hinge'} - Add hinge transformed predictors.
\item \code{'bin'} - Add predictors binned by their percentiles.
}
}
\examples{
\dontrun{
 # Fit first model
 fit <- distribution(background) |>
        add_predictors(covariates) |>
        add_biodiversity_poipa(species) |>
        engine_glmnet() |>
        train()

 # New model object
 obj <- distribution(background) |>
        add_predictors_model(fit)
 obj
}
}
