% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train.R
\name{train}
\alias{train}
\alias{train,}
\alias{train-method}
\title{Train the model from a given engine}
\usage{
train(
  x,
  runname,
  rm_corPred = FALSE,
  varsel = "reg",
  inference_only = FALSE,
  only_linear = TRUE,
  bias_variable = NULL,
  bias_value = NULL,
  verbose = FALSE,
  ...
)

\S4method{train}{BiodiversityDistribution}(x)
}
\arguments{
\item{x}{\code{\link[=distribution]{distribution()}} (i.e. \code{\linkS4class{BiodiversityDistribution}}) object).}

\item{runname}{A \code{\link{character}} name of the trained run.}

\item{rm_corPred}{Remove highly correlated predictors (Default: \code{FALSE}). This option
removes - based on pairwise comparisons - those covariates that are highly collinear (Pearson's r = \code{>0.7}).}

\item{varsel}{Perform a variable selection on the set of predictors either prior to building the model
or via variable selection / regularization of the model. Available options are:
\itemize{
\item \code{\link{none}} for no or default priors and no extensive hyperparameter search.
\item \code{\link{reg}} Model selection either through DIC or regularization / hyperparameter tuning depending on the
engine (Default option).
\item \code{\link{abess}} A-priori adaptive best subset selection of covariates via the \link{abess} package (see References).
Note that this effectively fits a separate generalized linear model to reduce the number of covariates.
Can be helpful for engines that don't directly support efficient variable regularization and when \code{N>100}.
}}

\item{inference_only}{By default the \link{engine} is used to create
a spatial prediction of the suitability surface, which can take time. If only inferences of
the strength of relationship between covariates and observations are required, this parameter
can be set to \code{TRUE} to ignore any spatial projection (Default: \code{FALSE}).}

\item{only_linear}{Fit model only on linear baselearners and functions. Depending
on the \link{engine} setting this option to \code{FALSE} will result in non-linear relationships
between observations and covariates, often increasing processing time (Default: \code{TRUE}).}

\item{bias_variable}{A \code{\link{vector}} with names of variables to be set to \emph{bias_value} (Default: \code{NULL}).
This option can for instance be used to 'partial' out certain biases after predictions have been made.
See Examples.}

\item{bias_value}{A \code{\link{vector}} with values to be set to \emph{bias_variable} (Default: \code{NULL}).
Specifying a \code{\link{numeric}} value here sets \code{bias_variable} to the target value.}

\item{...}{further arguments passed on.}
}
\value{
A \link{DistributionModel} object.
}
\description{
This function trains a \code{\link[=distribution]{distribution()}} model with the specified engine and
furthermore has some generic parameters that apply to all engines (regardless of type).

Users are advised to check the help files for individual \link{engine} for advice on how
the estimation is being done.
}
\details{
The resulting object contains both a \code{\link{fit_best}} object of the estimated model and, if \code{inference_only} is \code{FALSE}
a \link{RasterLayer} object named \code{\link{prediction}} that contains the spatial prediction of the model.
These objects can be requested via \code{object$get_data("fit_best")}.

Note that several engines do not support fully integrated likelihood models (such \link{engine_gdb} or
\link{engine_xgboost}) for example. In this case the estimation strategy for multiple added biodiversity datasets
(e.g. more than 1) is to fit recurrent models in sequence, where
the \code{nth'} spatial projection is provided as input to the \code{nth'+1} dataset.
See also Miller et al. (2019) in the references for more details on this strategy. Of course,
if users want more control about this aspect, another option is to fit separate models
and make use of the \link{add_offset_range} and \link{ensemble} functionalities.
}
\examples{
\dontrun{
 # Fit a linear penalized logistic regression model via stan
 x <- distribution(background) \%>\%
        # Presence-absence data
        add_biodiversity_poipa(surveydata) \%>\%
        # Add predictors and scale them
        add_predictors(env = predictors, transform = "scale", derivates = "none") \%>\%
        # Use stan for estimation
        engine_stan(chains = 2, iter = 1000, warmup = 500)
 # Train the model
 mod <- train(x, only_linear = TRUE, varsel = 'reg')
 mod
}
}
\references{
\itemize{
\item Miller, D.A.W., Pacifici, K., Sanderlin, J.S., Reich, B.J., 2019. The recent past and promising future for data integration methods to estimate species’ distributions. Methods Ecol. Evol. 10, 22–37. https://doi.org/10.1111/2041-210X.13110
\item Zhu, J., Wen, C., Zhu, J., Zhang, H., & Wang, X. (2020). A polynomial algorithm for best-subset selection problem. Proceedings of the National Academy of Sciences, 117(52), 33117-33123.
}
}
\seealso{
\link{engine_gdb}, \link{engine_xgboost}, \link{engine_bart}, \link{engine_inla}, \link{engine_inlabru}, \link{engine_breg}
}
