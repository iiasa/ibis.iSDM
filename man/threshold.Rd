% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/threshold.R
\name{threshold}
\alias{threshold}
\title{Threshold a continuous prediction to a categorical layer}
\usage{
threshold(
  obj,
  method = "fixed",
  value = NULL,
  poi = NULL,
  return_threshold = FALSE,
  ...
)

\S4method{threshold}{ANY}(obj)

\S4method{threshold}{RasterBrick}(obj)

\S4method{threshold}{RasterLayer}(obj)

\S4method{threshold}{BiodiversityScenario}(obj)
}
\arguments{
\item{obj}{A trained \code{\link{DistributionModel}} or alternatively a \code{\link{Raster}} object}

\item{method}{A specifc method for thresholding. One of 'fixed', 'mtp', 'percentile'}

\item{value}{A \code{\link{numeric}} value for thresholding if method is fixed (Default: NULL)}

\item{poi}{A \code{\link{sf}} object containing observational data used for model training}

\item{return_threshold}{Should threshold value be returned instead (Default: FALSE)}
}
\description{
For \code{\link{BiodiversityScenario}} objects store a threshold attribute in
the scenario object
}
\details{
'fixed' = applies a single pre-determined threshold
'mtp' = minimum training presence find and sets the lowest predicted suitability for any occurrence point
'percentile' = For a percentile threshold
'TSS' = Determines the optimal TSS (True Skill Statistic). Requires the 'modEvA' package
'kappa' = Determines the optimal kappa value (Kappa). Requires the 'modEvA' package
'F1score' = Determines the optimal F1score (also known as Sorensen similarity). Requires the 'modEvA' package
'F1score' = Determines the optimal sensitivity of presence records. Requires the 'modEvA' package
'Sensitivity' = Determines the optimal sensitivity of presence records. Requires the 'modEvA' package
'Specificity' = Determines the optimal sensitivity of presence records. Requires the 'modEvA' package
}
\examples{
\dontrun{
print('test')
}
}
