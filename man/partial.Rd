% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/partial.R
\name{partial}
\alias{partial}
\alias{partial.DistributionModel}
\title{Obtain partial effects of trained model}
\usage{
partial(
  mod,
  x.var,
  constant = NULL,
  variable_length = 100,
  values = NULL,
  plot = FALSE,
  ...
)

\S4method{partial}{ANY,character}(mod, x.var)

\method{partial}{DistributionModel}(x, ...)
}
\arguments{
\item{mod}{A trained \code{DistributionModel} object with \code{fit_best} model within.}

\item{x.var}{A \link{character} indicating the variable for which a partial effect is to be calculated.}

\item{constant}{A \link{numeric} constant to be inserted for all other variables. Default calculates a mean per variable.}

\item{variable_length}{\link{numeric} The interpolation depth (nr. of points) to be used (Default: \code{100}).}

\item{values}{\link{numeric} Directly specified values to compute partial effects for. If set, ignores
\code{"variable_length"} (Default: \code{NULL}).}

\item{plot}{A \code{\link{logical}} indication of whether the result is to be plotted?}

\item{...}{Other engine specific parameters}

\item{type}{A specified type, either \code{'response'} or \code{'predictor'}. Can be missing.}
}
\value{
A \link{data.frame} with the created partial response.
}
\description{
Create a partial response or effect plot of a trained model
}
\details{
By default the mean is calculated across all parameters that are not \code{x.var}.
Instead a \emph{constant} can be set (for instance \code{0}) to be applied to the output.
}
\seealso{
\link{partial}
}
\keyword{partial}
