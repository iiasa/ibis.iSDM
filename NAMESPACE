# Generated by roxygen2: do not edit by hand

S3method(as.Id,character)
S3method(coef,DistributionModel)
S3method(effects,DistributionModel)
export()
export(BARTPrior)
export(BARTPriors)
export(BREGPrior)
export(BREGPriors)
export(BiodiversityDataset)
export(BiodiversityDatasetCollection)
export(BiodiversityDistribution)
export(BiodiversityScenario)
export(DistributionModel)
export(Engine)
export(GDBPrior)
export(GDBPriors)
export(GLMNETPrior)
export(GLMNETPriors)
export(INLAPrior)
export(INLAPriors)
export(Log)
export(PredictorDataset)
export(Prior)
export(PriorList)
export(STANPrior)
export(STANPriors)
export(Settings)
export(XGBPrior)
export(XGBPriors)
export(add_biodiversity_poipa)
export(add_biodiversity_poipo)
export(add_biodiversity_polpa)
export(add_biodiversity_polpo)
export(add_constraint)
export(add_constraint_MigClim)
export(add_constraint_adaptability)
export(add_constraint_boundary)
export(add_constraint_connectivity)
export(add_constraint_dispersal)
export(add_constraint_minsize)
export(add_control_bias)
export(add_control_extrapolation)
export(add_latent_spatial)
export(add_log)
export(add_offset)
export(add_offset_bias)
export(add_offset_elevation)
export(add_offset_range)
export(add_predictor_elevationpref)
export(add_predictor_range)
export(add_predictors)
export(add_predictors_globiom)
export(add_predictors_model)
export(add_priors)
export(add_pseudoabsence)
export(alignRasters)
export(as.Id)
export(bivplot)
export(check)
export(distribution)
export(emptyraster)
export(engine_bart)
export(engine_breg)
export(engine_gdb)
export(engine_glm)
export(engine_glmnet)
export(engine_inla)
export(engine_inlabru)
export(engine_stan)
export(engine_xgboost)
export(ensemble)
export(ensemble_partial)
export(ensemble_spartial)
export(formatGLOBIOM)
export(get_data)
export(get_ngbvalue)
export(get_priors)
export(get_rastervalue)
export(ibis_dependencies)
export(ibis_future)
export(ibis_options)
export(interpolate_gaps)
export(is.Id)
export(is.Raster)
export(is.Waiver)
export(is.formula)
export(is.stars)
export(limiting)
export(load_model)
export(mask.BiodiversityDatasetCollection)
export(mask.BiodiversityScenario)
export(mask.DistributionModel)
export(mask.PredictorDataset)
export(myLog)
export(new_id)
export(new_waiver)
export(partial)
export(partial.DistributionModel)
export(partial_density)
export(plot.BiodiversityDatasetCollection)
export(plot.BiodiversityScenario)
export(plot.DistributionModel)
export(plot.Engine)
export(plot.PredictorDataset)
export(posterior_predict_stanfit)
export(predictor_derivate)
export(predictor_filter)
export(predictor_homogenize_na)
export(predictor_transform)
export(print.BiodiversityDataset)
export(print.BiodiversityDatasetCollection)
export(print.BiodiversityDistribution)
export(print.BiodiversityScenario)
export(print.DistributionModel)
export(print.Engine)
export(print.Id)
export(print.Log)
export(print.PredictorDataset)
export(print.Prior)
export(print.PriorList)
export(print.Settings)
export(print.distribution)
export(priors)
export(project.BiodiversityScenario)
export(pseudoabs_settings)
export(rm_latent)
export(rm_offset)
export(rm_predictors)
export(rm_priors)
export(run_stan)
export(sanitize_names)
export(scenario)
export(sel_predictors)
export(similarity)
export(simulate_population_steps)
export(spartial)
export(spartial.DistributionModel)
export(stancode)
export(stancode.DistributionModel)
export(summary.BiodiversityScenario)
export(summary.DistributionModel)
export(summary.PredictorDataset)
export(summary.PriorList)
export(summary.Settings)
export(summary.distribution)
export(thin_observations)
export(threshold)
export(train)
export(validate)
export(write_model)
export(write_output)
export(write_summary)
exportMethods(project)
import(sf)
import(terra)
importFrom(foreach,"%do%")
importFrom(foreach,"%dopar%")
importFrom(graphics,par)
importFrom(methods,as)
importFrom(stats,complete.cases)
importFrom(stats,effects)
importFrom(stats,mad)
importFrom(stats,residuals)
importFrom(stats,sd)
importFrom(stats,terms.formula)
importFrom(stats,update.formula)
importFrom(terra,mask)
importFrom(utils,install.packages)
